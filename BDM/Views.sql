#USE BD_BDM;

#Views

#1 Alumno - Mis Cursos
DROP VIEW IF EXISTS Alumno_MisCursos;
CREATE VIEW Alumno_MisCursos AS
        SELECT C.NOMBRE Nombre, C.IMAGEN Imagen,  CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Instructor, 
        INF.PROGRESO Progreso, INF.FECHA_INSCRIPCION Inscripción, INF.FECHA_FINALIZACION Finalización, INF.ESTATUS Estatus, CAT.NOMBRE Categoria
		FROM INFO_CURSO_ALUMNO INF
    INNER JOIN CURSOCOMPRADO_ALUMNO C
		ON INF.CURSO = C.ID_CURSOCOMPRADO_ALUMNO
    INNER JOIN USUARIO U
		ON C.INSTRUCTOR = U.ID_USUARIO
	INNER JOIN CATEGORIA CAT
		ON U.ID_USUARIO = CAT.CREADOR;
       
#2 Alumno - Mis Cursos (Terminados)
DROP VIEW IF EXISTS Alumno_MisCursos_Terminados;
CREATE VIEW Alumno_MisCursos_Terminados AS
         SELECT C.NOMBRE Nombre, C.IMAGEN Imagen,  CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Instructor, 
        INF.PROGRESO Progreso, INF.FECHA_INSCRIPCION Inscripción, INF.FECHA_FINALIZACION Finalización, INF.ESTATUS Estatus, CAT.NOMBRE Categoria
		FROM INFO_CURSO_ALUMNO INF
    INNER JOIN CURSOCOMPRADO_ALUMNO C
		ON INF.CURSO = C.ID_CURSOCOMPRADO_ALUMNO
    INNER JOIN USUARIO U
		ON C.INSTRUCTOR = U.ID_USUARIO
	INNER JOIN CATEGORIA CAT
		ON U.ID_USUARIO = CAT.CREADOR
	where INF.FECHA_FINALIZACION is not null;
    
#3 Alumno - Mi Curso  (Activos) *
DROP VIEW IF EXISTS Alumno_MisCursos_Activos;
CREATE VIEW Alumno_MisCursos_Activos AS
         SELECT C.NOMBRE Nombre, C.IMAGEN Imagen,  CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Instructor, 
        INF.PROGRESO Progreso, INF.FECHA_INSCRIPCION Inscripción, INF.FECHA_FINALIZACION Finalización, INF.ESTATUS Estatus, CAT.NOMBRE Categoria
		FROM INFO_CURSO_ALUMNO INF
    INNER JOIN CURSOCOMPRADO_ALUMNO C
		ON INF.CURSO = C.ID_CURSOCOMPRADO_ALUMNO
    INNER JOIN USUARIO U
		ON C.INSTRUCTOR = U.ID_USUARIO
	INNER JOIN CATEGORIA CAT
		ON U.ID_USUARIO = CAT.CREADOR
	where  C.ACTIVO = 1;
    
#4 Alumno - Mi Curso  (Todas las categorias)
DROP VIEW IF EXISTS Alumno_MisCursos_Categorias;
CREATE VIEW Alumno_MisCursos_Categorias AS
         SELECT C.NOMBRE Nombre, C.IMAGEN Imagen,  CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Instructor, 
        INF.PROGRESO Progreso, INF.FECHA_INSCRIPCION Inscripción, INF.FECHA_FINALIZACION Finalización, INF.ESTATUS Estatus, CAT.NOMBRE Categoria
		FROM INFO_CURSO_ALUMNO INF
    INNER JOIN CURSOCOMPRADO_ALUMNO C
		ON INF.CURSO = C.ID_CURSOCOMPRADO_ALUMNO
    INNER JOIN USUARIO U
		ON C.INSTRUCTOR = U.ID_USUARIO
	INNER JOIN CATEGORIA CAT
		ON U.ID_USUARIO = CAT.CREADOR
	order by  CAT.NOMBRE;
    
#5 Alumno - Mi Curso  (Rango de Fecha de inscripcion)
DROP VIEW IF EXISTS Alumno_MisCursos_RangoFechas;
CREATE VIEW Alumno_MisCursos_RangoFechas AS
        SELECT C.NOMBRE Nombre, C.IMAGEN Imagen,  CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Instructor, 
        INF.PROGRESO Progreso, INF.FECHA_INSCRIPCION Inscripción, INF.FECHA_FINALIZACION Finalización, INF.ESTATUS Estatus, CAT.NOMBRE Categoria
		FROM INFO_CURSO_ALUMNO INF
    INNER JOIN CURSOCOMPRADO_ALUMNO C
		ON INF.CURSO = C.ID_CURSOCOMPRADO_ALUMNO
    INNER JOIN USUARIO U
		ON C.INSTRUCTOR = U.ID_USUARIO
	INNER JOIN CATEGORIA CAT
		ON U.ID_USUARIO = CAT.CREADOR
	order by  INF.FECHA_INSCRIPCION ;

#6 Categoria - Cursos (Todas las categorias)
DROP VIEW IF EXISTS CategoriasCursos;
CREATE VIEW CategoriasCursos AS
        SELECT C.NOMBRE Categoria, CI.NOMBRE Curso,  CC.REGISTRO Registro
		FROM CURSO_CATEGORIA CC
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CC.CURSO = CI.ID_CURSO_INSTRUCTOR
	INNER JOIN CATEGORIA C
		ON CI.INSTRUCTOR = C.ID_CATEGORIA
	order by  C.NOMBRE;

#Perfil Instructor

# 7. Instructor - Perfil Instructor - Todos los Cursos
DROP VIEW IF EXISTS PerfilInstructor_Cursos_Todos;
CREATE VIEW PerfilInstructor_Cursos_Todos AS

       
       SELECT CI.NOMBRE Curso, (select sum(ALUMNO)  FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
        where CIA.CURSO = CI.ID_CURSO_INSTRUCTOR) Total_Alumnos, 
        (select avg(INF.ULTIMONIVEL_COMPLETADO) from  CURSOCOMPRADO_ALUMNO CA INNER JOIN INFO_CURSO_ALUMNO INF
		ON CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO where CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO) Nivel_Promedio_Cursado,
       ( select SUM(R.COSTO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Dinero_Recaudado,
          ( select avg(R.FORMA_PAGO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Forma_Pago_Promedio
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR;

# 8. Instructor - Perfil Instructor - Todos los Cursos - Rango Fechas
DROP VIEW IF EXISTS PerfilInstructor_Cursos_Todos_RangoFechas;
CREATE VIEW PerfilInstructor_Cursos_Todos_RangoFechas AS
       #datos Alumnos
       
       
       SELECT CI.NOMBRE Curso, (select sum(ALUMNO)  FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
        where CIA.CURSO = CI.ID_CURSO_INSTRUCTOR) Total_Alumnos, 
        (select avg(INF.ULTIMONIVEL_COMPLETADO) from  CURSOCOMPRADO_ALUMNO CA INNER JOIN INFO_CURSO_ALUMNO INF
		ON CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO where CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO) Nivel_Promedio_Cursado,
       ( select SUM(R.COSTO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Dinero_Recaudado,
          ( select avg(R.FORMA_PAGO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Forma_Pago_Promedio,
        CI.FECHA_CREACION FECHA_CREACION
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR;
        
# 9. Instructor - Perfil Instructor - Todos los Cursos - Categoria
DROP VIEW IF EXISTS PerfilInstructor_Cursos_Todos_Categoria;
CREATE VIEW PerfilInstructor_Cursos_Todos_Categoria AS
       
       SELECT CAT.NOMBRE Categoria, CI.NOMBRE Curso, (select sum(ALUMNO)  FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
        where CIA.CURSO = CI.ID_CURSO_INSTRUCTOR) Total_Alumnos, 
        (select avg(INF.ULTIMONIVEL_COMPLETADO) from  CURSOCOMPRADO_ALUMNO CA INNER JOIN INFO_CURSO_ALUMNO INF
		ON CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO where CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO) Nivel_Promedio_Cursado,
       ( select SUM(R.COSTO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Dinero_Recaudado,
          ( select avg(R.FORMA_PAGO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Forma_Pago_Promedio,
        CI.FECHA_CREACION FECHA_CREACION
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
	INNER JOIN CURSO_CATEGORIA CUC
        ON CI.ID_CURSO_INSTRUCTOR = CUC.CURSO
	INNER JOIN CATEGORIA CAT
		ON CUC.CATEGORIA = CAT.ID_CATEGORIA;
        
# 10. Instructor - Perfil Instructor - Todos los Cursos - Cursos Activos
DROP VIEW IF EXISTS PerfilInstructor_Cursos_Todos_Activos;
CREATE VIEW PerfilInstructor_Cursos_Todos_Activos AS
      
       SELECT CI.NOMBRE Curso, (select sum(ALUMNO)  FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
        where CIA.CURSO = CI.ID_CURSO_INSTRUCTOR) Total_Alumnos, 
        (select avg(INF.ULTIMONIVEL_COMPLETADO) from  CURSOCOMPRADO_ALUMNO CA INNER JOIN INFO_CURSO_ALUMNO INF
		ON CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO where CA.ID_CURSOCOMPRADO_ALUMNO = INF.CURSO) Nivel_Promedio_Cursado,
       ( select SUM(R.COSTO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Dinero_Recaudado,
          ( select avg(R.FORMA_PAGO) from CURSO_INSTRUCTOR CI INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO where CI.ID_CURSO_INSTRUCTOR = R.CURSO) Forma_Pago_Promedio,
        CI.FECHA_CREACION FECHA_CREACION
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
	INNER JOIN CURSO_CATEGORIA CUC
        ON CI.ID_CURSO_INSTRUCTOR = CUC.CURSO
	INNER JOIN CATEGORIA CAT
		ON CUC.CATEGORIA = CAT.ID_CATEGORIA
        
        where CI.ACTIVO = 1;

# 11. Instructor - Perfil Instructor - Detalle por Curso
DROP VIEW IF EXISTS PerfilInstructor_Cursos_PorCurso;
CREATE VIEW PerfilInstructor_Cursos_PorCurso AS
       SELECT CI.NOMBRE Curso, CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Alumno, R.FECHA_INSCRIPCION Inscripcion,
       (select max(NCA.NUMERO_NIVEL) from INFO_NIVEL_ALUMNO NA INNER JOIN NIVELCOMPRADO_ALUMNO NCA ON NA.NIVEL = NCA.ID_NIVELCOMPRADO_ALUMNO 
       WHERE NA.ESTATUS = 'Completado') Nivel_Cursado, R.COSTO Costo, R.FORMA_PAGO Forma_Pago
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
	INNER JOIN USUARIO U
		ON CIA.ALUMNO = U.ID_USUARIO
			
	INNER JOIN CURSOCOMPRADO_ALUMNO CA
		ON CIA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN NIVELCOMPRADO_ALUMNO NCA
		ON NCA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN INFO_NIVEL_ALUMNO NA
		ON NCA.ID_NIVELCOMPRADO_ALUMNO = NA.NIVEL
        
	INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO;
        
# 12. Instructor - Perfil Instructor - Detalle por Curso - FECHAS
DROP VIEW IF EXISTS PerfilInstructor_Cursos_PorCurso_Fecha;
CREATE VIEW PerfilInstructor_Cursos_PorCurso_Fecha AS
       SELECT CI.NOMBRE Curso, CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Alumno, R.FECHA_INSCRIPCION Inscripcion,
       (select max(NCA.NUMERO_NIVEL) from INFO_NIVEL_ALUMNO NA INNER JOIN NIVELCOMPRADO_ALUMNO NCA ON NA.NIVEL = NCA.ID_NIVELCOMPRADO_ALUMNO 
       WHERE NA.ESTATUS = 'Completado') Nivel_Cursado, R.COSTO Costo, R.FORMA_PAGO Forma_Pago, CI.FECHA_CREACION FECHA_CREACION
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
	INNER JOIN USUARIO U
		ON CIA.ALUMNO = U.ID_USUARIO
			
	INNER JOIN CURSOCOMPRADO_ALUMNO CA
		ON CIA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN NIVELCOMPRADO_ALUMNO NCA
		ON NCA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN INFO_NIVEL_ALUMNO NA
		ON NCA.ID_NIVELCOMPRADO_ALUMNO = NA.NIVEL
        
	INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO;

# 13. Instructor - Perfil Instructor - Detalle por Curso - Categoria
DROP VIEW IF EXISTS PerfilInstructor_Cursos_PorCurso_Categoria;
CREATE VIEW PerfilInstructor_Cursos_PorCurso_Categoria AS
      
       #datos Alumnos
       SELECT CAT.NOMBRE Categoria, CI.NOMBRE Curso, CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Alumno, R.FECHA_INSCRIPCION Inscripcion,
       (select max(NCA.NUMERO_NIVEL) from INFO_NIVEL_ALUMNO NA INNER JOIN NIVELCOMPRADO_ALUMNO NCA ON NA.NIVEL = NCA.ID_NIVELCOMPRADO_ALUMNO 
       WHERE NA.ESTATUS = 'Completado') Nivel_Cursado, R.COSTO Costo, R.FORMA_PAGO Forma_Pago, CI.FECHA_CREACION FECHA_CREACION
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
	INNER JOIN USUARIO U
		ON CIA.ALUMNO = U.ID_USUARIO
			
	INNER JOIN CURSOCOMPRADO_ALUMNO CA
		ON CIA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN NIVELCOMPRADO_ALUMNO NCA
		ON NCA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN INFO_NIVEL_ALUMNO NA
		ON NCA.ID_NIVELCOMPRADO_ALUMNO = NA.NIVEL
        
	INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO
	INNER JOIN CURSO_CATEGORIA CUC
        ON CI.ID_CURSO_INSTRUCTOR = CUC.CURSO
	INNER JOIN CATEGORIA CAT
		ON CUC.CATEGORIA = CAT.ID_CATEGORIA;
        
# 14. Instructor - Perfil Instructor - Detalle por Curso - Activos
DROP VIEW IF EXISTS PerfilInstructor_Cursos_PorCurso_Activos;
CREATE VIEW PerfilInstructor_Cursos_PorCurso_Activos AS
        
       #datos Alumnos
       SELECT CI.NOMBRE Curso, CONCAT(U.NOMBRES, ' ', U.APELLIDOS) Alumno, R.FECHA_INSCRIPCION Inscripcion,
       (select max(NCA.NUMERO_NIVEL) from INFO_NIVEL_ALUMNO NA INNER JOIN NIVELCOMPRADO_ALUMNO NCA ON NA.NIVEL = NCA.ID_NIVELCOMPRADO_ALUMNO 
       WHERE NA.ESTATUS = 'Completado') Nivel_Cursado, R.COSTO Costo, R.FORMA_PAGO Forma_Pago, CI.FECHA_CREACION FECHA_CREACION
		FROM CURSO_INSTRUCTOR_ALUMNO CIA
    INNER JOIN CURSO_INSTRUCTOR CI
		ON CIA.CURSO = CI.ID_CURSO_INSTRUCTOR
	INNER JOIN USUARIO U
		ON CIA.ALUMNO = U.ID_USUARIO
			
	INNER JOIN CURSOCOMPRADO_ALUMNO CA
		ON CIA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN NIVELCOMPRADO_ALUMNO NCA
		ON NCA.CURSO = CA.ID_CURSOCOMPRADO_ALUMNO
	INNER JOIN INFO_NIVEL_ALUMNO NA
		ON NCA.ID_NIVELCOMPRADO_ALUMNO = NA.NIVEL
        
	INNER JOIN REGISTRO_CURSO_ALUMNO R
		ON CI.ID_CURSO_INSTRUCTOR = R.CURSO
	INNER JOIN CURSO_CATEGORIA CUC
        ON CI.ID_CURSO_INSTRUCTOR = CUC.CURSO
	INNER JOIN CATEGORIA CAT
		ON CUC.CATEGORIA = CAT.ID_CATEGORIA
	where CI.ACTIVO = 1;
    

